USE steam;
CREATE TABLE IF NOT EXISTS Avaliacao (
    ID_Avaliacao INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID_Usuario INT NOT NULL,           -- ID do usuário que fez a avaliação
    App_ID INT NOT NULL,              -- ID do jogo avaliado
    Nota INT NOT NULL CHECK (Nota BETWEEN 1 AND 10),  -- Nota de 1 a 10
    Comentario TEXT,                   -- Comentário opcional do usuário
    Data_Avaliacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  -- Data da avaliação
    FOREIGN KEY (ID_Usuario) REFERENCES Usuario(ID_Usuario),  -- Chave estrangeira para usuário
    FOREIGN KEY (App_ID) REFERENCES Jogo(App_ID),              -- Chave estrangeira para jogo
    CONSTRAINT unique_user_game UNIQUE (ID_Usuario, App_ID)    -- Restrição para garantir que um usuário não possa avaliar o mesmo jogo mais de uma vez
);

use steam;
INSERT INTO Avaliacao (ID_Usuario, App_ID, Nota, Comentario) VALUES 
(1, 11, 9, 'Jogo incrível! Adorei a jogabilidade e gráficos.'),
(2, 2, 7, 'Bom jogo, mas poderia ser melhor em termos de história.'),
(3, 3, 8, 'Ótima experiência, valeu a pena jogar.'),
(4, 4, 6, 'Jogo mediano, algumas partes são chatas.'),
(5, 5, 10, 'Fantástico! Melhor jogo que já joguei.'),	
(6, 6, 5, 'Não gostei muito, achei repetitivo.'),
(7, 7, 7, 'Diversão garantida, mas com alguns problemas técnicos.'),
(8, 8, 8, 'Jogo bem balanceado e divertido.'),
(9, 9, 9, 'Adorei! Jogabilidade fluida e bem feita.'),
(10, 10, 6, 'Esperava mais, mas ainda assim é bom.'),
(11, 1, 7, 'Bom jogo, mas senti falta de algumas funcionalidades.'),
(12, 12, 10, 'Perfeito! Não tenho nada a reclamar.'),
(13, 13, 8, 'Muito bom, mas precisa de algumas melhorias.'),
(14, 14, 9, 'Quase perfeito, pequenos detalhes incomodam.'),
(15, 15, 7, 'Jogo legal, mas pode ser cansativo após um tempo.');

use steam;
SELECT 
    a.ID_Avaliacao, 
    u.Nome AS Nome_Usuario, 
    a.Nota, 
    a.Comentario, 
    a.Data_Avaliacao
FROM Avaliacao a
JOIN Usuario u ON a.ID_Usuario = u.ID_Usuario
JOIN Jogo j ON a.App_ID = j.App_ID
WHERE a.App_ID = 11;

SELECT 
    j.Nome AS App_ID, 
    AVG(a.Nota) AS Media_Avaliacao
FROM Avaliacao a
JOIN Jogo j ON a.App_ID = j.App_ID
WHERE a.App_ID = 11
GROUP BY j.Nome;
